version: '3'

services:
  db-postgres:
    image: postgres:12.0
    container_name: db-postgres
    # ports:
    #   - '4321:5432'
    expose:
      - 5432
    volumes:
      - ./database_volume:/var/lib/postgresql/data
    environment:
      LC_ALL: C.UTF-8
      POSTGRES_USER: pizzaadmin
      POSTGRES_PASSWORD: AdminPizza123.
      POSTGRES_DB: TeamPizza

  nginx:
    image: nginx
    restart: always
    container_name: nginx
    ports:
      - "80:8000" # for teldat.pizza set 80:8000
      - "443:443"
    volumes:
      - ./nginx_config/conf.d:/etc/nginx/conf.d
      - ./TeamPizza/static:/static
      - ./ssl/key:/etc/ssl
      - ./ssl/cert:/ssl
    depends_on:  # <-- wait for djangoapp to be "ready" before starting this service
      - web-app
    links:  # <--  other method to create connections between containers
      - web-app:web-app

  web-app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    container_name: web-app
    environment:
      DEBUG: 'true'
    volumes:
      - ./TeamPizza/:/TeamPizza
    expose:
      - 8000
    depends_on:
      - db-postgres
    links:
      - db-postgres:db-postgres
    command: bash -c "python3 /TeamPizza/manage.py makemigrations < <(yes y) && python3 /TeamPizza/manage.py makemigrations UserApp < <(yes y) && python3 /TeamPizza/manage.py makemigrations OrderApp < <(yes y) && python3 /TeamPizza/manage.py  migrate && gunicorn TeamPizza.wsgi --keyfile /ssl/key/dummy-key.pem --certfile /ssl/cert/dummy-certificate.crt -b 0.0.0.0:8000"
# streams with answer to commands '< <(yes y)' is helpfull in updating database